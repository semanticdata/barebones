---
interface Props {
  post?: {
    id: string;
    data: {
      title: string;
    };
  };
  direction: "prev" | "next";
}

const { post, direction } = Astro.props;

const isPrev = direction === "prev";
const isNext = direction === "next";
---

{
  post?.id ? (
    <a
      href={`/blog/${post.id}`}
      class={`group relative flex flex-nowrap rounded border border-black bg-black/5 px-4 py-3 no-underline transition-colors duration-300 ease-in-out hover:bg-black hover:text-white focus-visible:bg-black/5 focus-visible:text-black dark:border-white/50 dark:bg-white/5 dark:hover:bg-white dark:hover:text-black dark:focus-visible:bg-white/5 dark:focus-visible:text-white ${
        isPrev ? "pl-10" : "flex-row-reverse pr-10 py-4"
      }`}
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 24 24"
        class={`absolute top-1/2 size-5 -translate-y-1/2 fill-none stroke-current stroke-2 ${
          isPrev ? "left-2" : "right-2"
        }`}
      >
        <line
          x1="5"
          y1="12"
          x2="19"
          y2="12"
          class="translate-x-3 scale-x-0 transition-transform duration-300 ease-in-out group-hover:translate-x-0 group-hover:scale-x-100 group-focus-visible:translate-x-0 group-focus-visible:scale-x-100"
        />
        <polyline
          points={isPrev ? "12 5 5 12 12 19" : "12 5 19 12 12 19"}
          class={`transition-transform duration-300 ease-in-out group-hover:translate-x-0 group-focus-visible:translate-x-0 ${
            isPrev ? "translate-x-1" : "-translate-x-1"
          }`}
        />
      </svg>
      <div class="flex items-center text-sm">{post.data.title}</div>
    </a>
  ) : (
    <div class="invisible" />
  )
}