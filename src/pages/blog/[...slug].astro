---
import { type CollectionEntry, getCollection } from "astro:content";
import { Image } from "astro:assets";

import { render } from "astro:content";

import BaseLayout from "@/layouts/BaseLayout.astro";

import SeoPost from "@/components/SeoPost.astro";

import { formatDate } from "@/lib/util";

import TableOfContents from "@/components/TableOfContents.astro";
import Footer from "@/components/Footer.astro";
import PostNavigation from "@/components/PostNavigation.astro";

interface Props {
  entry: CollectionEntry<"blog">;
}

export async function getStaticPaths() {
  const blog = await getCollection("blog");
  return blog.map((entry) => ({
    params: { slug: entry.id },
    props: { entry },
  }));
}

// type Props = CollectionEntry<"blog">;

const blog = (await getCollection("blog"))
  // .filter((post) => !post.data.draft)
  .sort(
    (a, b) =>
      b.data.publicationDate.valueOf() - a.data.publicationDate.valueOf(),
  );

function getNextPost() {
  let postIndex;
  for (const entry of blog) {
    if (entry.id === Astro.params.slug) {
      postIndex = blog.indexOf(entry);
      return blog[postIndex + 1];
    }
  }
}

function getPrevPost() {
  let postIndex;
  for (const entry of blog) {
    if (entry.id === Astro.params.slug) {
      postIndex = blog.indexOf(entry);
      return blog[postIndex - 1];
    }
  }
}

const nextPost = getNextPost();
const prevPost = getPrevPost();

const { entry } = Astro.props;
const { Content, headings } = await render(entry);
---

<BaseLayout>
  <SeoPost slot="head" entry={entry} />
  <div>
    {
      entry.data.image && (
        <Image
          src={entry.data.image}
          alt={entry.data.imageAlt || ""}
          class="w-full h-auto animate"
          loading="eager"
          decoding="async"
        />
      )
    }
    <h1 class="mt-3 animate">{entry.data.title}</h1>
    <p class="animate">
      {formatDate(entry.data.publicationDate)}
    </p>
    <hr class="mt-3 mb-6 animate" />

    <TableOfContents headings={headings} />

    <div class="mx-auto dark:prose-invert animate content prose">
      <Content />
    </div>
  </div>

  <PostNavigation prevPost={prevPost} nextPost={nextPost} />

  <Footer />
</BaseLayout>
